{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\reactProject\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPostsContainer.jsx\";\nimport React from 'react';\nimport { updateNewPostTextActionCreator, addPostActionCreator } from '../../../Redux/profileReducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\nimport { updateNewMessageBodyCreator } from '../../../Redux/dialogsReducer';\n\nconst MyPostsContainer = () => {\n  let state = props.store.getState();\n\n  let addPost = () => {\n    props.store.dispatch(addPostActionCreator());\n  };\n\n  let onPostChange = text => {\n    let action = updateNewPostTextActionCreator(text);\n    props.store.dispatch(action);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MyPosts, {\n    updateNewPostText: onPostChange,\n    addPost: addPost,\n    posts: state.profilePage.posts,\n    updateNewPostText: state.profilePage.newPostText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 11\n  }, this);\n};\n\n_c = MyPostsContainer;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateNewPostText: text => {\n      let action = updateNewMessageBodyCreator(text);\n      dispatch(action);\n    },\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    }\n  };\n};\n\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPostsContainer\");","map":{"version":3,"sources":["D:/reactProject/src/components/Profile/MyPosts/MyPostsContainer.jsx"],"names":["React","updateNewPostTextActionCreator","addPostActionCreator","MyPosts","connect","updateNewMessageBodyCreator","MyPostsContainer","state","props","store","getState","addPost","dispatch","onPostChange","text","action","profilePage","posts","newPostText","mapStateToProps","mapDispatchToProps","updateNewPostText","MyPostContainer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,8BAAR,EAAwCC,oBAAxC,QAAmE,+BAAnE;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,2BAAT,QAA4C,+BAA5C;;AAGA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,MAAIC,KAAK,GAAGC,KAAK,CAACC,KAAN,CAAYC,QAAZ,EAAZ;;AACA,MAAIC,OAAO,GAAG,MAAM;AAClBH,IAAAA,KAAK,CAACC,KAAN,CAAYG,QAAZ,CAAqBV,oBAAoB,EAAzC;AACD,GAFD;;AAIA,MAAIW,YAAY,GAAIC,IAAD,IAAU;AAC3B,QAAIC,MAAM,GAAGd,8BAA8B,CAACa,IAAD,CAA3C;AACAN,IAAAA,KAAK,CAACC,KAAN,CAAaG,QAAb,CAAsBG,MAAtB;AACD,GAHD;;AAKA,sBAAQ,QAAC,OAAD;AAAS,IAAA,iBAAiB,EAAIF,YAA9B;AACU,IAAA,OAAO,EAAIF,OADrB;AAEU,IAAA,KAAK,EAAIJ,KAAK,CAACS,WAAN,CAAkBC,KAFrC;AAGU,IAAA,iBAAiB,EAAEV,KAAK,CAACS,WAAN,CAAkBE;AAH/C;AAAA;AAAA;AAAA;AAAA,UAAR;AAID,CAfD;;KAAMZ,gB;;AAiBN,MAAMa,eAAe,GAAIZ,KAAD,IAAW;AACjC,SAAO;AACLU,IAAAA,KAAK,EAAEV,KAAK,CAACS,WAAN,CAAkBC,KADpB;AAELC,IAAAA,WAAW,EAAEX,KAAK,CAACS,WAAN,CAAkBE;AAF1B,GAAP;AAID,CALD;;AAOA,MAAME,kBAAkB,GAAIR,QAAD,IAAc;AACvC,SAAO;AACLS,IAAAA,iBAAiB,EAAGP,IAAD,IAAU;AAC3B,UAAIC,MAAM,GAAGV,2BAA2B,CAACS,IAAD,CAAxC;AACAF,MAAAA,QAAQ,CAACG,MAAD,CAAR;AACD,KAJI;AAKLJ,IAAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;AACD;AAPI,GAAP;AASD,CAVD;;AAYA,MAAMoB,eAAe,GAAGlB,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CjB,OAA7C,CAAxB;AAEA,eAAeG,gBAAf","sourcesContent":["import React from 'react';\r\nimport {updateNewPostTextActionCreator, addPostActionCreator} from '../../../Redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport { updateNewMessageBodyCreator } from '../../../Redux/dialogsReducer';\r\n\r\n\r\nconst MyPostsContainer = () => {\r\n  let state = props.store.getState();\r\n  let addPost = () => {\r\n    props.store.dispatch(addPostActionCreator());\r\n  }\r\n\r\n  let onPostChange = (text) => {\r\n    let action = updateNewPostTextActionCreator(text);\r\n    props.store .dispatch(action);\r\n  }\r\n\r\n  return (<MyPosts updateNewPostText = {onPostChange} \r\n                    addPost = {addPost} \r\n                    posts = {state.profilePage.posts}\r\n                    updateNewPostText={state.profilePage.newPostText}/>)\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNewPostText: (text) => {\r\n      let action = updateNewMessageBodyCreator(text);\r\n      dispatch(action);\r\n    },\r\n    addPost: () => {\r\n      dispatch(addPostActionCreator());\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;"]},"metadata":{},"sourceType":"module"}
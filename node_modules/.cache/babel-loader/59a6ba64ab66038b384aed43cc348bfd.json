{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\reactProject\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, setUsersAC, unfollowAC, setCurrentPageAC, setTotalUsersCountAC, toggleIsFetchingAC } from '../../Redux/usersReducer';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport Preloader from '../Common/Preloader/Preloader';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.tooggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.tooggleIsFetching(true);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toogleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        setTotalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unFollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.UsersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountAC(totalCount));\n    },\n    toggleIsFetchingAC: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n};\n\nlet name = 15;\nlet user = {\n  name\n};\nexport default connect(mapStateToProps, {\n  follow: follow,\n  unfollow: unfollow,\n  setUsers: setUsers,\n  setCurrentPage: setCurrentPage,\n  setTotalUsersCount: setTotalUsersCount,\n  toggleIsFetchingAC: toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["D:/reactProject/src/components/Users/UsersContainer.jsx"],"names":["React","connect","follow","setUsersAC","unfollowAC","setCurrentPageAC","setTotalUsersCountAC","toggleIsFetchingAC","axios","Users","Preloader","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","tooggleIsFetching","get","pageSize","then","response","setUsers","data","items","componentDidMount","toogleIsFetching","currentPage","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","users","unfollow","mapStateToProps","state","usersPage","UsersPage","mapDispatchToProps","dispatch","userId","followAC","name","user","toggleIsFetching"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport  {follow, setUsersAC, unfollowAC, setCurrentPageAC, setTotalUsersCountAC, toggleIsFetchingAC } from '../../Redux/usersReducer';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.toogleIsFetching(true);\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n      .then(response => {\r\n       this.props.setUsers(response.data.items);\r\n       this.props.setTotalUsersCount(response.data.totalCount);\r\n    });\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.setCurrentPage(pageNumber);\r\n    this.props.tooggleIsFetching(true);\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n      .then(response => {\r\n        this.props.tooggleIsFetching(true);\r\n        this.props.setUsers(response.data.items);\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return  <>\r\n    { this.props.isFetching ? \r\n      <Preloader />: null }            \r\n    <Users setTotalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged} \r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unFollow={this.props.unfollow} />\r\n            </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.UsersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    follow: (userId) => {\r\n      dispatch(followAC(userId));\r\n    },\r\n    unfollow: (userId) => {\r\n      dispatch(unfollowAC(userId));\r\n    },\r\n    setUsers: (users) => {\r\n      dispatch(setUsersAC(users));\r\n    },\r\n    setCurrentPage: (pageNumber) => {\r\n      dispatch(setCurrentPageAC(pageNumber));\r\n    },\r\n    setTotalUsersCount: (totalCount) => {\r\n      dispatch(setTotalUsersCountAC(totalCount));\r\n    },\r\n    toggleIsFetchingAC: (isFetching) => {\r\n      dispatch(toggleIsFetchingAC(isFetching));\r\n    }\r\n  }\r\n}\r\n\r\nlet name = 15;\r\nlet user = {\r\n  name,\r\n\r\n}\r\n\r\n \r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n  follow: follow,\r\n  unfollow: unfollow,\r\n  setUsers: setUsers,\r\n  setCurrentPage: setCurrentPage,\r\n  setTotalUsersCount: setTotalUsersCount,\r\n  toggleIsFetchingAC: toggleIsFetching\r\n})(UsersContainer);\r\n"]},"metadata":{},"sourceType":"module"}
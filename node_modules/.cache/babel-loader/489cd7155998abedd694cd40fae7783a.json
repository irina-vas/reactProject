{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\reactProject\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { followAC, setUsersAC, unfollowAC, setCurrentPageAC, setTotalUsersCountAC, toggleIsFetchingAC } from '../../Redux/usersReducer';\nimport * as axios from 'axios';\nimport Users from './Users';\nimport preloader from \"../../images/Spinner.svg\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.tooggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.tooggleIsFetching(true);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toogleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white;'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: preloader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 31\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        setTotalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unFollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.UsersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountAC(totalCount));\n    },\n    toggleIsFetchingAC: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["D:/reactProject/src/components/Users/UsersContainer.jsx"],"names":["React","connect","followAC","setUsersAC","unfollowAC","setCurrentPageAC","setTotalUsersCountAC","toggleIsFetchingAC","axios","Users","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","tooggleIsFetching","get","pageSize","then","response","setUsers","data","items","componentDidMount","toogleIsFetching","currentPage","setTotalUsersCount","totalCount","render","isFetching","backgroundColor","preloader","totalUsersCount","users","follow","unfollow","mapStateToProps","state","usersPage","UsersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport  {followAC, setUsersAC, unfollowAC, setCurrentPageAC, setTotalUsersCountAC, toggleIsFetchingAC } from '../../Redux/usersReducer';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\nimport preloader from '../../images/Spinner.svg';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.toogleIsFetching(true);\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n      .then(response => {\r\n       this.props.setUsers(response.data.items);\r\n       this.props.setTotalUsersCount(response.data.totalCount);\r\n    });\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.setCurrentPage(pageNumber);\r\n    this.props.tooggleIsFetching(true);\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n      .then(response => {\r\n        this.props.tooggleIsFetching(true);\r\n        this.props.setUsers(response.data.items);\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return  <>\r\n    { this.props.isFetching ? <div style={{backgroundColor: 'white;'}}><img src={ preloader } /></div>: null }            \r\n    <Users setTotalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged} \r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unFollow={this.props.unfollow} />\r\n            </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.UsersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    follow: (userId) => {\r\n      dispatch(followAC(userId));\r\n    },\r\n    unfollow: (userId) => {\r\n      dispatch(unfollowAC(userId));\r\n    },\r\n    setUsers: (users) => {\r\n      dispatch(setUsersAC(users));\r\n    },\r\n    setCurrentPage: (pageNumber) => {\r\n      dispatch(setCurrentPageAC(pageNumber));\r\n    },\r\n    setTotalUsersCount: (totalCount) => {\r\n      dispatch(setTotalUsersCountAC(totalCount));\r\n    },\r\n    toggleIsFetchingAC: (isFetching) => {\r\n      dispatch(toggleIsFetchingAC(isFetching));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\r\n"]},"metadata":{},"sourceType":"module"}
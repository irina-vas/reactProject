{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\reactProject\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.jsx\";\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../../Redux/dialogsReducer';\n\nconst DialogsContainer = props => {\n  let state = props.store.getState().dialogsPage;\n\n  let onSendMessageClick = () => {\n    props.store.dispatch(sendMessageCreator());\n  };\n\n  let onNewMessageChange = body => {\n    props.store.dispatch(updateNewMessageBodyCreator(body));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialogs, {\n    updateNewMessageBody: onNewMessageChange,\n    sendMessage: onSendMessageClick,\n    dialogsPage: state\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n_c = DialogsContainer;\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"sources":["D:/reactProject/src/components/Dialogs/DialogsContainer.jsx"],"names":["sendMessageCreator","updateNewMessageBodyCreator","DialogsContainer","props","state","store","getState","dialogsPage","onSendMessageClick","dispatch","onNewMessageChange","body"],"mappings":";;AACA,SAASA,kBAAT,EAA6BC,2BAA7B,QAAgE,4BAAhE;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAElC,MAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,QAAZ,GAAuBC,WAAnC;;AAEA,MAAIC,kBAAkB,GAAG,MAAM;AAC7BL,IAAAA,KAAK,CAACE,KAAN,CAAYI,QAAZ,CAAqBT,kBAAkB,EAAvC;AACD,GAFD;;AAIA,MAAIU,kBAAkB,GAAIC,IAAD,IAAU;AACjCR,IAAAA,KAAK,CAACE,KAAN,CAAYI,QAAZ,CAAqBR,2BAA2B,CAACU,IAAD,CAAhD;AACD,GAFD;;AAIA,sBAAO,QAAC,OAAD;AAAS,IAAA,oBAAoB,EAAID,kBAAjC;AACS,IAAA,WAAW,EAAIF,kBADxB;AAES,IAAA,WAAW,EAAIJ;AAFxB;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD,CAfD;;KAAMF,gB;AAiBN,eAAeA,gBAAf","sourcesContent":["\r\nimport { sendMessageCreator, updateNewMessageBodyCreator } from '../../Redux/dialogsReducer';\r\n\r\nconst DialogsContainer = (props) => {\r\n\r\n  let state = props.store.getState().dialogsPage;\r\n\r\n  let onSendMessageClick = () => {\r\n    props.store.dispatch(sendMessageCreator());\r\n  }\r\n\r\n  let onNewMessageChange = (body) => {\r\n    props.store.dispatch(updateNewMessageBodyCreator(body));\r\n  }\r\n\r\n  return <Dialogs updateNewMessageBody = {onNewMessageChange} \r\n                  sendMessage = {onSendMessageClick}\r\n                  dialogsPage = {state}/>\r\n}\r\n\r\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}
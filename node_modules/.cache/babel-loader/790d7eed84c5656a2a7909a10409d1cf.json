{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\reactProject\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport * as React from 'react';\nimport { connect } from \"react-redux\";\nimport { followAC, setUsersAC, unfollowAC, setCurrentPageAC, setTotalUsersCountAC } from '../../Redux/usersReducer';\nimport * as axios from 'axios';\nimport Users from './Users';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [t, \"            \", /*#__PURE__*/_jsxDEV(Users, {\n        setTotalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unFollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.UsersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountAC(totalCount));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["D:/reactProject/src/components/Users/UsersContainer.jsx"],"names":["React","connect","followAC","setUsersAC","unfollowAC","setCurrentPageAC","setTotalUsersCountAC","axios","Users","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","t","totalUsersCount","users","follow","unfollow","mapStateToProps","state","usersPage","UsersPage","isFetching","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport  {followAC, setUsersAC, unfollowAC, setCurrentPageAC, setTotalUsersCountAC} from '../../Redux/usersReducer';\r\nimport * as axios from 'axios';\r\nimport Users from './Users';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n      .then(response => {\r\n       this.props.setUsers(response.data.items);\r\n       this.props.setTotalUsersCount(response.data.totalCount);\r\n    });\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.setCurrentPage(pageNumber);\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n      .then(response => {\r\n       this.props.setUsers(response.data.items);\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return  <>\r\n    { t }            <Users setTotalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged} \r\n                    users={this.props.users}\r\n                    follow={this.props.follow}\r\n                    unFollow={this.props.unfollow} />\r\n            </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.UsersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    follow: (userId) => {\r\n      dispatch(followAC(userId));\r\n    },\r\n    unfollow: (userId) => {\r\n      dispatch(unfollowAC(userId));\r\n    },\r\n    setUsers: (users) => {\r\n      dispatch(setUsersAC(users));\r\n    },\r\n    setCurrentPage: (pageNumber) => {\r\n      dispatch(setCurrentPageAC(pageNumber));\r\n    },\r\n    setTotalUsersCount: (totalCount) => {\r\n      dispatch(setTotalUsersCountAC(totalCount));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\r\n"]},"metadata":{},"sourceType":"module"}